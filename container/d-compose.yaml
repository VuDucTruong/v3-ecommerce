# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      dockerfile: container/Dockerfile
      context: ..
    env_file:
      - ../env/dev.env
      - ../env/profile.env
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy

  #    volumes:
  #      - ./mirroring:/BOOT-INF/
  db:
    ports:
      - 5433:5432
    image: postgres:17.2
    restart: on-failure
    user: postgres
    secrets:
      - db-password
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d/
    #      - db-data:/var/lib/postgresql/data
    env_file:
      - ../env/db.env
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    ports:
      - 9090:9090
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus-config/prometheus.yml:/etc/prometheus/prometheus.yml
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.127.0
    restart: always
    command:
      - --config=/etc/otelcol-contrib/config.yaml
    volumes:
      - ./collector/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
#volumes:
#  db-data:
#    name: phong
secrets:
  db-password:
    file: ../env/db_password.txt

