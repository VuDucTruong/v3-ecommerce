name: Docker Push and Scan For Development
on:
  workflow_run:
    workflows: ["Build and Scan Source Code Security/Quality"]
    types:
      - completed
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    if: ${{ vars.ENV == 'dev' }}
    environment: dev
    env:
      IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_DEV }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'  

      - name: Build JAR with Maven
        run: mvn package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Multi-Arch Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./container/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE }}-buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}-buildcache,mode=max
          provenance: false
          sbom: false
      # Step 3: Scan Docker image with Trivy Action
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE }}
          format: 'template'
          template: "@$HOME/.local/bin/trivy-bin/contrib/html.tpl"
          output: 'trivy-image-report.html'

      - name: Upload Trivy Image Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image-report
          path: trivy-image-report.html